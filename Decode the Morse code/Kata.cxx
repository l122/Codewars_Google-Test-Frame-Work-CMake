#include "Kata.hxx"

std::string decodeMorse(std::string morseCode)
{
    std::map<std::string, std::string> codesMap = {
        {".-", "A"},
        {"-...", "B"},
        {"-.-.", "C"},
        {"-..", "D"},
        {".", "E"},
        {"..-.", "F"},
        {"--.", "G"},
        {"....", "H"},
        {"..", "I"},
        {".---", "J"},
        {"-.-", "K"},
        {".-..", "L"},
        {"--", "M"},
        {"-.", "N"},
        {"---", "O"},
        {".--.", "P"},
        {"--.-", "Q"},
        {".-.", "R"},
        {"...", "S"},
        {"-", "T"},
        {"..-", "U"},
        {"...-", "V"},
        {".--", "W"},
        {"-..-", "X"},
        {"-.--", "Y"},
        {"--..", "Z"},
        {".----", "1"},
        {"..---", "2"},
        {"...--", "3"},
        {"....-", "4"},
        {".....", "5"},
        {"-....", "6"},
        {"--...", "7"},
        {"---..", "8"},
        {"----.", "9"},
        {"-----", "0"},
        {" ", " "},
        {".-.-.-", "."},
        {"-..-", ","},
        {"..-..", "?"},
        {".-.", "'"},
        {"-.-.-", "!"},
        {"...---...", "SOS"}
    };
    std::string decoded;

    size_t prev = 0,
           next = prev;
    do
    {
        next = morseCode.substr(prev, morseCode.length()-prev).find(" ");
        if (next != std::string::npos)
        {
            if (next == 0)
                next++;
            decoded += codesMap[morseCode.substr(prev, next)];
            prev += next + 1;
        }
        else
        {
            decoded += codesMap[morseCode.substr(prev, morseCode.length())];
        }
    } while (next != std::string::npos);
    
    return decoded;
}


// std::map<std::string, const char> codesMap = {
    //     {".-", 'A'},
    //     {"-...", 'B'},
    //     {"-.-.", 'C'},
    //     {"-..", 'D'},
    //     {".", 'E'},
    //     {"..-.", 'F'},
    //     {"--.", 'G'},
    //     {"....", 'H'},
    //     {"..", 'I'},
    //     {".---", 'J'},
    //     {"-.-", 'K'},
    //     {".-..", 'L'},
    //     {"--", 'M'},
    //     {"-.", 'N'},
    //     {"---", 'O'},
    //     {".--.", 'P'},
    //     {"--.-", 'Q'},
    //     {".-.", 'R'},
    //     {"...", 'S'},
    //     {"-", 'T'},
    //     {"..-", 'U'},
    //     {"...-", 'V'},
    //     {".--", 'W'},
    //     {"-..-", 'X'},
    //     {"-.--", 'Y'},
    //     {"--..", 'Z'},
    //     {".----", '1'},
    //     {"..---", '2'},
    //     {"...--", '3'},
    //     {"....-", '4'},
    //     {".....", '5'},
    //     {"-....", '6'},
    //     {"--...", '7'},
    //     {"---..", '8'},
    //     {"----.", '9'},
    //     {"-----", '0'},
    //     // {".-.-.-", '.'},
    //     // // {"-..-", '`'},
    //     // {"..-..", '?'},
    //     // // {".-.", "'"},
    //     // {"-.-.-", '!'},
    //     // // {"-..-.", '/'},
    //     // {"-.-.", '('},
    //     // {"-.-.-", ')'},
    //     // {".-...", '&'},
    //     // {"-...", ':'},
    //     // {"-.-.-.", ';'},
    //     // {"-...-", '='},
    //     // {".-.-.", '+'},
    //     // {"-....-", '-'},
    //     // {"..-.-", '-'},
    //     // {".-..-.", '"'},
    //     // {"...-..-", '$'},
    //     // {".-.-.", '@'},
    //     // {"...---...", "SOS"}
    // };